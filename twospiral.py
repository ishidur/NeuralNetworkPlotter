import numpy as np
from matplotlib import cm, gridspec, pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


def sigmoid(x):
    return 1 / (1 + np.exp(-x))


# Components of network(l=0,1,2,,,)
neuronStr = "2X20X20X20X1"
str = "49	-0.99864	-0.614899	0.168879	-0.300099	0.649852	-0.637996	0.418289	-0.38555	-0.816116	-0.698363	0.980314	-0.76073	-0.983656	0.0621538	0.205593	-0.676885	-0.0985359	-0.879106	0.560861	0.0366784	0.104389	0.608364	-0.101299	0.768943	0.381776	0.848469	0.0541238	-1.06093	-0.334789	-0.74498	0.142085	-1.00625	-0.257257	0.0235945	0.297815	0.160872	-0.181863	0.323081	0.708627	-0.484852	0.750323	0.467954	0.905908	0.85714	0.0667376	-0.689241	-0.0980435	-0.527843	0.726034	-0.550868	0.600555	0.734868	1.02172	1.01366	0.192449	-0.21233	-0.476557	-0.381345	0.656571	-0.943172	-0.187627	0.210177	-0.672597	0.491305	-0.0652107	0.0811587	-0.494187	-0.128921	0.840346	-0.609424	0.842475	0.143086	0.249854	0.397206	-0.726342	-0.636397	0.190261	0.088541	0.903678	0.196308	-0.731083	-0.236077	0.910262	-0.149466	-0.281854	-0.605975	-0.711012	-0.601809	-0.919155	0.490015	0.217714	-0.0468617	0.939729	0.0756424	0.506711	0.283699	-0.337106	0.976508	0.686585	0.547275	0.412376	0.487048	-0.678704	-0.417161	0.689078	0.707282	-0.996414	0.171782	0.764377	0.134341	0.483053	-0.128393	-0.822539	0.236556	0.911765	-0.29434	0.13715	-0.889423	0.0808686	0.150249	-0.791184	0.210124	0.822208	0.182567	-0.403563	0.259779	-0.877963	-0.0116471	-0.438052	0.82605	-0.927551	-0.337803	0.7828	-0.196577	0.247523	-0.320495	-0.481894	-0.82935	0.698553	-0.744609	-0.911818	0.140124	0.395402	0.395879	-0.115146	0.319807	0.612406	0.206695	-0.559144	-0.502335	0.327341	-0.0210159	0.331611	-0.977965	-0.927468	-0.235543	-0.328935	0.0549114	0.398093	-0.576372	0.906185	-0.293869	-0.401203	0.545074	-0.490356	-0.609289	0.705068	-0.765952	0.532235	-0.618116	0.924359	0.0405195	-0.339849	0.416263	-0.321188	0.349914	-0.731785	-0.139616	-0.196206	-0.26189	-0.404154	-0.688347	-0.124423	0.46215	0.958162	0.696452	-0.578669	0.00860575	-0.194344	0.224369	-0.35659	-0.657418	-0.768078	-0.783967	-0.880793	0.622422	0.646783	-0.80811	-0.472636	-0.99689	-0.475198	-0.509924	-0.8063	-0.0643683	-0.365006	-0.722961	-0.768131	1.0502	-0.617073	0.419714	0.205229	-0.34117	0.027474	0.271565	0.262659	0.60466	-0.743157	-0.487132	-0.988582	-0.131251	0.216245	-0.125428	0.977832	-0.737572	0.486588	-0.754475	0.106957	0.435169	0.230387	0.195107	-0.348509	0.522411	-0.515054	0.752825	-0.733677	0.0698522	-0.401451	0.784361	0.0614285	-0.829484	0.376082	0.635812	0.408958	-0.271059	0.161539	0.510798	-0.970957	0.937027	0.189961	-0.277912	-0.601656	-0.355326	-0.402783	0.00407114	0.684295	0.219709	0.573664	-0.537295	0.912946	0.342521	0.731217	0.0475456	-0.661715	0.692873	-0.616697	-0.35482	-0.772146	-0.613162	-0.117846	0.0088045	-0.762966	0.701318	0.870004	0.514991	0.737457	0.617931	0.829466	-0.703903	-0.190039	0.704558	0.458028	1.02535	0.820192	-0.931357	0.560127	0.920489	-0.0900605	-0.206071	-0.0980742	-0.806886	0.812814	0.952689	0.133162	0.0296364	0.184441	0.80234	0.586061	-0.752833	-0.509323	-0.842411	0.0183387	0.526648	0.688832	0.0545589	0.683943	-0.401705	0.505002	-0.606727	0.168523	0.508578	0.740686	0.798263	0.358972	-0.212491	0.448422	-0.690331	0.523303	0.865253	0.18264	0.625552	-0.521969	-0.296129	0.198359	0.354394	-0.215897	-0.308401	0.372581	0.989046	0.244984	0.247498	0.509332	0.507775	-0.737207	0.593408	0.719502	0.288201	0.277854	-0.835741	-0.476633	0.315846	0.549612	-0.659114	-0.598476	-0.119943	-0.0160479	-0.709538	0.0870116	-0.111497	0.693113	0.255859	-0.686629	-0.353455	0.0107284	0.119645	-0.957822	-0.170022	-0.234616	-0.90141	0.379059	0.369308	-0.0115147	0.315728	-0.629943	-0.767286	0.765851	0.474272	-0.85214	0.969501	0.64388	0.395136	-0.344029	0.927217	-0.221534	-0.27467	-0.735868	-0.470361	0.749697	-0.878636	0.898465	0.593563	-0.0658093	0.000902851	0.663379	0.905065	-0.936875	0.685533	-0.12621	-0.767673	0.234301	0.624378	-0.813714	-0.721017	0.0115794	0.927543	0.415196	-0.720126	-0.529434	-0.327151	-0.122956	0.0672515	0.945501	-0.871946	-0.0363706	0.864812	0.97632	0.423229	-0.595979	0.224523	0.429618	-0.690373	-0.846029	-0.833552	0.605405	0.271405	0.244267	0.72975	0.760511	0.833103	0.788056	0.360467	0.579369	0.393303	-0.6771	0.14084	0.110785	0.206172	0.392436	-0.879054	0.114311	0.166981	0.269798	0.630184	0.0492048	-0.63389	-0.542825	-0.830933	-0.478776	-0.19552	-0.971132	-0.742089	-0.780097	0.0281071	0.0352	-0.309247	-0.884941	0.509998	-0.418989	-0.0738462	-0.262606	0.748816	0.67094	0.0644978	-0.222217	-0.237019	-0.872283	-0.143245	-0.497712	-0.135641	0.885474	0.390719	0.541354	0.576818	-0.886874	0.77319	0.279034	0.441392	-0.828615	0.116179	0.86159	-0.849468	-0.4158	-0.633217	1.0098	0.27243	-0.402298	0.879816	-0.204407	0.39382	-0.545017	-0.695221	-0.50946	-0.902378	0.891562	-0.0551706	0.837191	-0.266146	0.507559	-0.664655	0.818726	0.646965	0.0815351	-0.78446	-0.256934	0.453953	0.352151	0.379909	-0.68428	0.264003	0.292191	-0.105906	0.0559529	-0.469562	0.081344	0.444995	0.478156	0.032335	-0.529794	-0.885252	-0.111126	-0.00155084	0.816497	0.676611	0.559793	-0.254382	0.571802	0.631386	0.316758	0.919202	0.861346	-0.875919	0.811364	-0.607025	0.157027	-0.16681	0.486173	-0.782532	0.425931	-0.382059	-0.326295	0.220107	0.566859	0.744271	-0.534544	0.351569	0.698241	-0.684028	0.125492	0.390114	0.203939	0.992697	-0.829324	-0.521197	0.153473	0.772596	0.827201	0.843403	0.338374	0.612565	-0.24957	0.246451	0.952282	-0.694898	0.273834	0.79433	0.577216	-0.729342	1.00919	-0.382096	0.861466	-0.736623	0.797923	-0.68137	-0.459091	0.272679	-0.161791	-0.585232	0.399091	-0.563369	-0.801161	0.212377	-0.588684	-0.322457	-0.537087	0.13285	0.812842	-0.89823	-0.0255785	0.166381	0.0477573	0.205677	-0.106012	0.263106	-0.203224	-0.530938	-0.152968	0.0342865	0.154998	-0.360979	0.331923	0.699405	0.814693	0.204289	-0.590232	0.202387	0.886679	-0.293618	-0.526601	-0.394172	0.0162919	-0.897909	-0.843566	0.768338	-0.293301	0.903486	0.808039	0.311962	-0.798196	-0.0270675	-0.208426	0.347554	0.595985	-0.0524724	0.941841	-0.891776	0.825282	-0.964666	-0.39737	0.098292	-0.100406	-0.653858	0.594231	0.910971	-0.956047	0.789717	-0.338768	-0.135626	0.123769	-1.00436	-0.914202	-0.264995	0.911124	0.56577	-0.434859	-0.0155921	0.104002	0.979355	0.596173	0.437583	0.810361	0.318618	-0.668554	-0.598941	0.632214	-0.114242	-0.166695	0.387885	-0.796659	-0.102956	-0.767912	-0.895508	0.717208	-0.545301	-0.955014	-0.411678	-0.0433496	0.298754	-0.260855	-0.46943	0.921473	-0.330239	0.937438	0.560584	-0.576321	1.03503	0.171044	-0.80825	1.01007	0.0308274	0.0133832	-0.41833	0.792532	0.495117	0.537538	-0.110627	-0.744657	-0.893603	-0.00894398	0.115986	-0.612921	-0.364908	0.55083	0.301276	-0.846363	-0.577227	-0.26075	-0.838314	-0.0205257	0.21559	0.799644	-0.271456	0.266864	1.02875	-0.696294	0.765888	-0.248282	0.833375	0.245072	0.00355504	-0.472834	0.309126	0.746662	0.332681	-0.212023	0.861981	0.516293	-0.848115	1.00692	0.516449	0.981537	-0.470009	-0.616993	-0.912712	-0.905667	0.0324182	0.712391	0.285742	-0.75278	0.928908	-0.558625	-0.176993	-0.613123	0.808343	0.250759	0.24853	0.529683	-0.919572	0.559755	-0.16077	-0.0201832	0.612262	0.254837	0.353752	-0.983717	-0.77773	-0.0920949	-0.147644	1.01276	0.377066	0.488674	-0.138086	-0.0693352	-0.0600276	-0.862475	-0.0455542	0.529894	-0.295062	0.127861	-0.310712	0.557341	-0.185089	-0.458789	0.44504	-0.301786	0.200276	-0.58299	-0.940029	0.558079	0.55489	0.923278	-0.555976	-0.953528	0.878958	-0.648565	0.273632	0.518357	-0.40397	0.371396	0.653776	0.233954	0.776792	-0.498585	-0.618481	0.289955	0.465548	-0.944854	-0.489188	-0.673075	0.252608	0.278531	0.353768	0.537493	0.369096	-0.720943	0.46877	-0.662125	0.378388	0.429544	0.856701	0.680264	-0.701269	0.470564	-0.798717	-0.311384	0.626848	0.394213	-0.188268	-0.0440313	-0.0909582	-0.874866	-0.668851	-0.740456	-0.662782	0.260337	-0.854507	-0.54842	-0.728242	-0.217062	0.223085	0.807848	0.508619	0.581815	-0.399547	-0.169052	0.789979	0.616672	0.331795	0.46095	0.613011	0.319707	-0.00642482	-0.198707	0.26903	-0.0767639	-0.414246	-0.45121	-0.205441	-0.20665	1.00241	0.19247	0.266529	-0.654723	0.360373	-0.167403	0.705547	-0.867783	0.560352	1.00277	0.496432	-0.928497	0.0166799	-0.41202	0.127284	0.276874	-0.391491	0.390987	-0.838566	-0.806451	-0.855165	0.348893	0.84723	0.447009	0.727093	-0.820971	-0.375887	-0.77827	-0.967521	0.587519	1.01113	0.134089	0.611883	0.980875	-0.154181	0.408656	-0.156198	0.837048	0.35624	0.648929	0.132132	-0.793571	-0.611321	-0.0324756	0.132375	0.0900102	0.746489	-0.208717	0.652263	0.297744	-0.580081	0.099367	-0.128437	-1.00191	-0.308441	-0.205137	-0.629399	0.719711	0.479429	0.896902	0.303854	0.488482	0.123427	0.489386	0.554199	0.913408	0.009228	-0.186756	-0.770122	0.870165	0.684276	-0.0440996	-0.777506	0.640219	0.417066	-0.950375	-0.160499	0.701235	-0.875651	-0.706734	-0.500911	-0.525993	0.0453775	-0.887939	0.0467395	0.143564	0.371971	0.377968	0.833221	0.149425	-0.502694	0.49014	-0.257388	0.862088	0.126034"

neurons = [int(k) for k in neuronStr.split('X')]
# via Excel
b = [float(k) for k in str.split('\t')]
# via Sublime
# b = [float(k) for k in str.split(',')]

weights = []
biases = []
cursor = 1
for i in range(len(neurons) - 1):
    m = []
    for j in range(neurons[i]):
        m.append(b[cursor:cursor + neurons[i + 1]])
        cursor += neurons[i + 1]
    biases.append(np.matrix(b[cursor:cursor + neurons[i + 1]]).transpose())
    cursor += neurons[i + 1]
    weights.append(np.matrix(m).transpose())


def calcOutput(x, y):
    inputs = weights[0] * np.matrix([[x], [y]]) + biases[0]
    for i in range(len(neurons) - 2):
        outputs = sigmoid(inputs)
        inputs = weights[i + 1] * outputs + biases[i + 1]
    outputs = sigmoid(inputs)
    return outputs[0, 0]


def meshgrid_propagation_forMap(layersArray):
    N = 100
    xyRange = 1.0
    # グリッド作成
    x = np.linspace(0, xyRange, N)
    y = np.linspace(0, xyRange, N)
    X, Y = np.meshgrid(x, y)  # グリッド領域を示すマトリックスの構成
    Z = np.array(list(map(lambda x, y: list(map(calcOutput, x, y)), X, Y)))
    plt.pcolor(X, Y, Z, vmin=0., vmax=1.)
    plt.colorbar()
    plt.jet()
    ttl = "%s\nlearning time = %d" % (neuronStr, b[0])
    plt.title(ttl)
    plt.xlabel('Input1', fontsize=15)
    plt.ylabel('Input2', fontsize=15)
    plt.xlim(0, 1.0)
    plt.ylim(0, 1.0)
    plt.legend(fontsize=18)
    plt.tick_params(labelsize=18)
    plt.grid()
    filename = "%s_learning_time_%d" % (neuronStr, b[0])
    # plt.savefig(filename + ".png")
    plt.show()


meshgrid_propagation_forMap(neurons)
